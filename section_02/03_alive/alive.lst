     1                                  section .data
     2 00000000 48656C6C6F2C20576F-       msg1    db  "Hello, World!", 0
     2 00000009 726C642100         
     3 0000000E 416C69766520616E64-       msg2    db  "Alive and Kicking!", 0
     3 00000017 204B69636B696E6721-
     3 00000020 00                 
     4 00000021 65010000                  radius  dd  357
     5 00000025 1F85EB51B81E0940          pi      dq  3.14
     6 0000002D 25730A00                  fmtstr  db  "%s", 10, 0 ; format for printing string
     7 00000031 25660A00                  fmtflt  db  "%f", 10, 0 ; format for printing float
     8 00000035 25640A00                  fmtint  db  "%d", 10, 0 ; format for printing integer
     9                                  section .bss
    10                                  section .text
    11                                  extern printf
    12                                    global main
    13                                  main: 
    14 00000000 55                        push  rbp
    15 00000001 4889E5                    mov   rbp, rsp
    16                                  
    17                                  ; print msg1
    18 00000004 B800000000                mov   rax, 0  ; no floating point
    19 00000009 48BF-                     mov   rdi, fmtstr
    19 0000000B [2D00000000000000] 
    20 00000013 48BE-                     mov   rsi, msg1
    20 00000015 [0000000000000000] 
    21 0000001D E8(00000000)              call  printf
    22                                  
    23                                  ; print msg2
    24 00000022 B800000000                mov   rax, 0  ; no floating point
    25 00000027 48BF-                     mov   rdi, fmtstr
    25 00000029 [2D00000000000000] 
    26 00000031 48BE-                     mov   rsi, msg2
    26 00000033 [0E00000000000000] 
    27 0000003B E8(00000000)              call  printf
    28                                  
    29                                  ; print radius
    30 00000040 B800000000                mov   rax, 0  ; no floating point
    31 00000045 48BF-                     mov   rdi, fmtint
    31 00000047 [3500000000000000] 
    32 0000004F 488B3425[21000000]        mov   rsi, [radius] ; [] brackets mean to get the contents at memory address &radius. printf for floats and integers wants the value not the address
    33 00000057 E8(00000000)              call  printf
    34                                  
    35                                  ; print pi
    36 0000005C B801000000                mov   rax, 1  ; xmm register used (chapter 11 covers this)
    37 00000061 F30F7E0425-               movq  xmm0, [pi]
    37 00000066 [25000000]         
    38 0000006A 48BF-                     mov   rdi, fmtflt
    38 0000006C [3100000000000000] 
    39 00000074 E8(00000000)              call  printf
    40                                  
    41 00000079 4889EC                    mov   rsp, rbp
    42 0000007C 5D                        pop   rbp
    43                                  
    44 0000007D C3                      ret
    45                                  
